// Configuration Resend - Renommer ce fichier en email-service.ts et installer resend
import { Resend } from 'resend';
import type { WorkspaceInvitation } from './postgres-workspace';

const resend = new Resend(process.env.RESEND_API_KEY);

interface EmailOptions {
  to: string;
  subject: string;
  html: string;
}

// Fonction pour envoyer un email via Resend
async function sendEmail(options: EmailOptions) {
  try {
    const { data, error } = await resend.emails.send({
      from: 'Pointages <noreply@votre-domaine.com>', // Remplacer par votre domaine v√©rifi√©
      to: [options.to],
      subject: options.subject,
      html: options.html,
    });

    if (error) {
      throw new Error(`Resend error: ${error.message}`);
    }

    console.log(`üìß Email sent via Resend: ${data?.id}`);
    return { success: true, id: data?.id };
  } catch (error) {
    console.error('‚ùå Error sending email via Resend:', error);
    throw error;
  }
}

// Fonction pour envoyer une invitation par email
export async function sendWorkspaceInvitation(
  invitation: WorkspaceInvitation,
  workspaceName: string,
  inviterName: string
) {
  const inviteUrl = `${process.env.NEXT_PUBLIC_APP_URL || 'http://localhost:3000'}/workspaces/invitations?token=${invitation.token}`;
  
  const emailHtml = `
    <!DOCTYPE html>
    <html>
      <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Invitation √† rejoindre un espace de travail</title>
        <style>
          body { 
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            line-height: 1.6; 
            color: #333; 
            margin: 0;
            padding: 0;
            background-color: #f8f9fa;
          }
          .container { 
            max-width: 600px; 
            margin: 0 auto; 
            padding: 20px; 
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
          }
          .header { 
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 30px 20px; 
            border-radius: 8px 8px 0 0; 
            margin: -20px -20px 20px -20px;
            text-align: center;
          }
          .header h1 {
            margin: 0;
            font-size: 24px;
            font-weight: 600;
          }
          .content {
            padding: 0 20px;
          }
          .button { 
            display: inline-block; 
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white; 
            padding: 14px 28px; 
            text-decoration: none; 
            border-radius: 6px; 
            margin: 20px 0;
            font-weight: 600;
            text-align: center;
          }
          .button:hover {
            opacity: 0.9;
          }
          .info-box {
            background: #f8f9fa;
            border-left: 4px solid #667eea;
            padding: 15px;
            margin: 20px 0;
            border-radius: 4px;
          }
          .footer { 
            margin-top: 30px; 
            padding-top: 20px; 
            border-top: 1px solid #eee; 
            color: #666; 
            font-size: 14px;
            text-align: center;
          }
          .link {
            color: #667eea;
            word-break: break-all;
          }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <h1>üéØ Invitation √† rejoindre un espace de travail</h1>
          </div>
          
          <div class="content">
            <p>Bonjour,</p>
            
            <p><strong>${inviterName}</strong> vous invite √† rejoindre l'espace de travail <strong>"${workspaceName}"</strong> sur notre plateforme de traitement des pointages.</p>
            
            <div class="info-box">
              <p><strong>D√©tails de l'invitation :</strong></p>
              <ul>
                <li>Espace de travail : <strong>${workspaceName}</strong></li>
                <li>R√¥le attribu√© : <strong>${invitation.role === 'editor' ? '√âditeur' : 'Lecteur'}</strong></li>
                <li>Expire le : <strong>${new Date(invitation.expiresAt).toLocaleDateString('fr-FR')}</strong></li>
              </ul>
            </div>
            
            <div style="text-align: center; margin: 30px 0;">
              <a href="${inviteUrl}" class="button">‚úÖ Accepter l'invitation</a>
            </div>
            
            <p>Ou copiez ce lien dans votre navigateur :</p>
            <p class="link">${inviteUrl}</p>
            
            <div class="footer">
              <p>Si vous n'attendiez pas cette invitation, vous pouvez ignorer cet email en toute s√©curit√©.</p>
              <p>Cet email a √©t√© envoy√© automatiquement par le syst√®me de pointages.</p>
            </div>
          </div>
        </div>
      </body>
    </html>
  `;

  try {
    const result = await sendEmail({
      to: invitation.email,
      subject: `üéØ Invitation √† rejoindre l'espace de travail "${workspaceName}"`,
      html: emailHtml,
    });

    console.log(`‚úÖ Invitation email sent to ${invitation.email} for workspace ${workspaceName}`);
    return result;
  } catch (error) {
    console.error('‚ùå Error sending invitation email:', error);
    throw new Error('Failed to send invitation email');
  }
}

// Fonction pour envoyer un email de bienvenue lors de la cr√©ation d'un workspace
export async function sendWorkspaceCreatedEmail(
  userEmail: string,
  userName: string,
  workspaceName: string
) {
  const emailHtml = `
    <!DOCTYPE html>
    <html>
      <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Espace de travail cr√©√© avec succ√®s</title>
        <style>
          body { 
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            line-height: 1.6; 
            color: #333; 
            margin: 0;
            padding: 0;
            background-color: #f8f9fa;
          }
          .container { 
            max-width: 600px; 
            margin: 0 auto; 
            padding: 20px; 
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
          }
          .header { 
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            color: white;
            padding: 30px 20px; 
            border-radius: 8px 8px 0 0; 
            margin: -20px -20px 20px -20px;
            text-align: center;
          }
          .header h1 {
            margin: 0;
            font-size: 24px;
            font-weight: 600;
          }
          .content {
            padding: 0 20px;
          }
          .button { 
            display: inline-block; 
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            color: white; 
            padding: 14px 28px; 
            text-decoration: none; 
            border-radius: 6px; 
            margin: 20px 0;
            font-weight: 600;
            text-align: center;
          }
          .feature-list {
            background: #f8f9fa;
            padding: 20px;
            margin: 20px 0;
            border-radius: 8px;
            border-left: 4px solid #28a745;
          }
          .feature-list ul {
            margin: 0;
            padding-left: 20px;
          }
          .feature-list li {
            margin: 8px 0;
          }
          .footer { 
            margin-top: 30px; 
            padding-top: 20px; 
            border-top: 1px solid #eee; 
            color: #666; 
            font-size: 14px;
            text-align: center;
          }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <h1>üéâ Espace de travail cr√©√© avec succ√®s !</h1>
          </div>
          
          <div class="content">
            <p>Bonjour ${userName},</p>
            
            <p>F√©licitations ! Votre espace de travail <strong>"${workspaceName}"</strong> a √©t√© cr√©√© avec succ√®s sur notre plateforme de traitement des pointages.</p>
            
            <div class="feature-list">
              <p><strong>Vous pouvez maintenant :</strong></p>
              <ul>
                <li>üìä Uploader et analyser vos rapports de pointage</li>
                <li>üë• Inviter des coll√®gues √† rejoindre votre espace</li>
                <li>ü§ù Partager et collaborer sur les donn√©es de pointage</li>
                <li>üìà G√©n√©rer des exports Excel personnalis√©s</li>
                <li>üîí Contr√¥ler l'acc√®s avec des r√¥les d√©finis</li>
              </ul>
            </div>
            
            <div style="text-align: center; margin: 30px 0;">
              <a href="${process.env.NEXT_PUBLIC_APP_URL || 'http://localhost:3000'}/workspaces" class="button">üöÄ Acc√©der √† mon espace</a>
            </div>
            
            <div class="footer">
              <p>Merci d'utiliser notre plateforme de traitement des pointages !</p>
              <p>L'√©quipe de d√©veloppement</p>
            </div>
          </div>
        </div>
      </body>
    </html>
  `;

  try {
    const result = await sendEmail({
      to: userEmail,
      subject: `üéâ Espace de travail "${workspaceName}" cr√©√© avec succ√®s`,
      html: emailHtml,
    });

    console.log(`‚úÖ Workspace created email sent to ${userEmail}`);
    return result;
  } catch (error) {
    console.error('‚ùå Error sending workspace created email:', error);
    throw new Error('Failed to send workspace created email');
  }
}

// Configuration additionnelle pour Resend
export const resendConfig = {
  // Domaine v√©rifi√© pour l'envoi d'emails
  fromDomain: 'votre-domaine.com',
  
  // Templates d'emails (optionnel, pour utiliser les templates Resend)
  templates: {
    workspaceInvitation: 'workspace-invitation-template-id',
    workspaceCreated: 'workspace-created-template-id',
  },
  
  // Configuration des webhooks (optionnel)
  webhooks: {
    delivered: process.env.RESEND_WEBHOOK_DELIVERED,
    bounced: process.env.RESEND_WEBHOOK_BOUNCED,
    complained: process.env.RESEND_WEBHOOK_COMPLAINED,
  }
};

// Instructions d'installation :
// 1. npm install resend
// 2. Cr√©er un compte sur https://resend.com
// 3. V√©rifier votre domaine
// 4. Obtenir votre cl√© API
// 5. Ajouter RESEND_API_KEY √† vos variables d'environnement
// 6. Renommer ce fichier en email-service.ts
// 7. Remplacer 'votre-domaine.com' par votre domaine v√©rifi√© 